#include <Keypad.h>

 

// ==== Configuração do Keypad ====

const byte LINHAS = 4;

const byte COLUNAS = 4;

char teclas[LINHAS][COLUNAS] = {

  {'1','2','3','A'},

  {'4','5','6','B'},

  {'7','8','9','C'},

  {'*','0','#','D'}

};

byte pinosLinhas[LINHAS] = {9, 8, 7, 6};

byte pinosColunas[COLUNAS] = {5, 4, 3, 2};

Keypad teclado = Keypad(makeKeymap(teclas), pinosLinhas, pinosColunas, LINHAS, COLUNAS);

 

// ==== Joystick ====

int eixoX = A0;

int eixoY = A1;

 

// ==== Sensores ====

#define TRIG 10

#define ECHO 11

#define SENSOR_NIVEL A2

 

// ==== Variáveis de controle ====

int modo = 0;  // 0 = nenhum modo selecionado; 1 = contínuo; 2 = sob demanda; 3 = teste

int distanciaLimite = 50;

int nivelLimite = 400;  // valor analógico

unsigned long tempoAnterior = 0;

 

// ==== Funções auxiliares ====

long leDistancia() {

  digitalWrite(TRIG, LOW);

  delayMicroseconds(2);

  digitalWrite(TRIG, HIGH);

  delayMicroseconds(10);

  digitalWrite(TRIG, LOW);

  long duracao = pulseIn(ECHO, HIGH);

  long distancia = duracao * 0.034 / 2;

  return distancia;

}

 

int leNivelAgua() {

  return analogRead(SENSOR_NIVEL);

}

 

void monitoraSensores() {

  long distancia = leDistancia();

  int nivel = leNivelAgua();

  Serial.print("Distância: ");

  Serial.print(distancia);

  Serial.print(" cm | Nível: ");

  Serial.println(nivel);

  if (distancia < distanciaLimite) {

    Serial.println("ALERTA: distância inferior ao limite!");

  }

  if (nivel > nivelLimite) {

    Serial.println("ALERTA: nível de água crítico!");

  }

}

 

void testaSensores() {

  long d = leDistancia();

  int n = leNivelAgua();

  Serial.print("Sensor ultrassônico OK — leitura: ");

  Serial.print(d);

  Serial.println(" cm");

  Serial.print("Sensor de nível OK — leitura: ");

  Serial.println(n);

}

 

// ==== Setup e Loop ====

void setup() {

  Serial.begin(9600);

  pinMode(TRIG, OUTPUT);

  pinMode(ECHO, INPUT);

  Serial.println("Sistema iniciado. Use o joystick para escolher o modo.");

}

 

void loop() {

  int x = analogRead(eixoX);

  int y = analogRead(eixoY);

  char tecla = teclado.getKey();

 

  // Seleção de modo via joystick (quando modo = 0)

  if (modo == 0) {

    if (x < 400) {

      Serial.println("Modo de monitoramento contínuo selecionado.");

      modo = 1;

    }

    else if (x > 600) {

      Serial.println("Modo sob demanda selecionado.");

      modo = 2;

    }

    else if (y < 400) {

      Serial.println("Modo de teste de sensores selecionado.");

      modo = 3;

    }

  }

 

  // Ajuste de parâmetro via teclado (números 0 a 9)

  if (tecla >= '0' && tecla <= '9') {

    distanciaLimite = (tecla - '0') * 10;  // ex: tecla '5' → 50 cm

    Serial.print("Parâmetro atualizado: distância crítica = ");

    Serial.print(distanciaLimite);

    Serial.println(" cm");

  }

 

  // Confirmação de modo com tecla '#'

  if (tecla == '#') {

    Serial.print("Modo confirmado: ");

    Serial.println(modo);

  }

 

  // Modo contínuo: monitora periodicamente

  if (modo == 1) {

    if (millis() - tempoAnterior > 2000) {

      tempoAnterior = millis();

      monitoraSensores();

    }

  }

 

  // Modo sob demanda: monitora quando pressionar '*'

  if (modo == 2 && tecla == '*') {

    monitoraSensores();

  }

 

  // Modo teste: testa sensores com '*'

  if (modo == 3 && tecla == '*') {

    testaSensores();

  }

}